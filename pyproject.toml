[project]
name = "modernizacao-manejo-api"
version = "0.1.0"
description = "API async robusta para gestão de rebanhos construída com FastAPI."
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "alembic>=1.14.0",
    "fastapi[standard]>=0.115.5",
    "greenlet>=3.1.1",
    "psycopg[binary]>=3.2.3",
    "pwdlib[argon2]>=0.2.1",
    "pydantic-settings>=2.6.1",
    "pydantic[email]>=2.9.2",
    "pyjwt>=2.9.0",
    "python-multipart>=0.0.17",
    "sqlalchemy>=2.0.36",
    "uvicorn[standard]>=0.32.0",
]

[dependency-groups]
dev = [
    "gevent>=24.11.1",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.0.0",
    "pytest-factoryboy>=2.7.0",
    "pytest>=8.3.3",
    "radon>=6.0.1",
    "ruff>=0.7.3",
    "taskipy>=1.14.0",
    "testcontainers>=4.8.2",
    "bandit>=1.7.10",
]

[tool.ruff]
line-length = 79
extend-exclude = ['migrations']

[tool.ruff.lint]
preview = true
select = ['I', 'F', 'E', 'W', 'PL', 'PT']

[tool.ruff.lint.per-file-ignores]
'tests/*.py' = ['PLR2004']

[tool.ruff.format]
preview = true
quote-style = 'single'

[tool.pytest.ini_options]
pythonpath = "."
addopts = '-p no:warnings'
asyncio_mode = 'auto'

[tool.coverage.run]
concurrency = ["thread", "gevent"]

[tool.taskipy.tasks]
lint = 'ruff check .; ruff check . --diff'
format = 'ruff format .; ruff check . --fix'
radon = 'radon cc ./app -a -na'
bandit = 'bandit -r ./app'
run = 'fastapi dev app/main.py'
pre_test = 'task lint'
test = 'pytest -s -x --cov=app -vv'
post_test = 'coverage html'
ready = 'task lint; task radon; task bandit; task test'
export = 'uv export --no-hashes --no-dev > requirements.txt'
logs = 'docker container logs app-manejo-dev'
